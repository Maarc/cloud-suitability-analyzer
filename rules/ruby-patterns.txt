



#logging to file:
logger = Logger.new('my_logs.log')
##############

#RPC:
rpc GetFeature(Point) returns (Feature) {}


rpc ListFeatures(

rpc RecordRoute(

rpc RouteChat(

message Point {

class ServerImpl < RouteGuide::Service    

################

file i/o:

file = File.open("/tmp/some_file", "w")
File.write(
File.read(    

IO.write('/tmp/msg.txt', 'hi')
Clipboard.copy IO.read('/tmp/msg.txt')

open('myfile.txt', 'w')

##################

windows registry:

Registry.open

###################

windows ldap:
LDAP::Conn.new(host = 'localhost', port = LDAP_PORT)

conn = LDAP::Conn.new($HOST, $PORT)
conn.bind('cn = root, dc = localhost, dc = localdomain','secret')
....
conn.unbind

LDAP.mod(LDAP::LDAP_MOD_ADD,'objectclass',['top','domain'])

##################

desktop client:
require 'gtk3'

window = Gtk::Window.new("My Window")
window.set_size_request(300,200)
window.signal_connect "delete-event" do |e|
  Gtk.main_quit
end

######################

sockets:

require 'socket'

p Socket.getnameinfo Socket.sockaddr_in 80, "example.com"
p Socket.getnameinfo ["AF_INET", 80, "webcode.me"]
